library(SpaDES.core)
library(googledrive)
#parameters from Drive
birdList <- sort(c("RUBL", "CAWA", "OSFL"))
rasterToMatchLocation <- as_id("https://drive.google.com/file/d/16dcxyFJEfqAnhnR5n6723QSzN9uKxD0r/view?usp=share_link")
studyAreaLocation <- file.path("https://drive.google.com/file/d/1iYXdXFcZex304o5voX6igFm5EC0ck1Bp/view?usp=sharing")
nameBCR <- "60"
bootRastersLocation <- ""
.studyAreaName <- "studyAreaAB.shp" #specify file name
#specify folder url
archiveStudyArea <- "studyAreaAB.zip" #give archive name
# #parameters from local
# birdList <- sort(c("RUBL", "CAWA", "OSFL"))
# rasterToMatchLocation <- file.path("C:/Users/RALAS6/Documents/Repositories/Data/LCCProducts/LCC05/LCC2005_V1_4a.tif")
# studyAreaLocation <- file.path("C:/Users/RALAS6/Documents/Repositories/Data/.shp")
# nameBCR <- "60"
# bootRastersLocation <- file.path("../Data/bootBirdRasters")
simModules <- list("BRC")
## Set simulation and module parameters
simTimes <- list(start = 1, end = 10, timeunit = "year")
simParams <- list(
BRC = list(simulationTimeStep = 10,
.plotInitialTime = 1,
fromDrive = TRUE,
.studyAreaName = .studyAreaName,
archiveStudyArea = archiveStudyArea,
birdList = birdList,
rasterToMatchLocation = rasterToMatchLocation,
studyAreaLocation = studyAreaLocation,
nameBCR = nameBCR,
bootRastersLocation = bootRastersLocation
)
)
## make a list of directory paths
inputsDir <- checkPath("C:/Users/RALAS6/Documents/Repositories/SpaDES/inputs", create = TRUE)
outputsDir <- checkPath("C:/Users/RALAS6/Documents/Repositories/SpaDES/outputs", create = TRUE)
downloadFolderArea <- checkPath(file.path(inputsDir, "studyArea"), create = TRUE)
inputBootBirdRasters <- checkPath(file.path(inputsDir, "bootBirdRasters"), create = TRUE)
outputMeanBirdRasters <- checkPath(file.path(outputsDir, "birdRasters"), create = TRUE)
setPaths(modulePath = file.path("C:/Users/RALAS6/Documents/Repositories/SpaDES/modules"),
cachePath = file.path("C:/Users/RALAS6/Documents/Repositories/SpaDES/cache"),
scratchPath = file.path("C:/Users/RALAS6/Documents/Repositories/SpaDES/scratch"),
inputPath = inputsDir,
outputPath = outputsDir)
simPaths <- getPaths()
## Simulation setup
mySim <- simInit(times = simTimes, params = simParams,
modules = simModules, paths = simPaths)
